{
    "contents" : "# Hello, world!\n#\n# This is an example function named 'hello'\n# which prints 'Hello, world!'.\n#\n# You can learn more about package authoring with RStudio at:\n#\n#   http://r-pkgs.had.co.nz/\n#\n# Some useful keyboard shortcuts for package authoring:\n#\n#   Build and Reload Package:  'Ctrl + Shift + B'\n#   Check Package:             'Ctrl + Shift + E'\n#   Test Package:              'Ctrl + Shift + T'\n\ngetWeather <- function(x) {\n  library(RCurl)\n  library(XML)\n  url <- paste('http://weather.yahooapis.com/forecastrss?w=',x,'&=c',sep=\"\")\n  doc = xmlTreeParse(getURL(url),useInternal = TRUE)\n\n  ans<- getNodeSet(doc, \"//yweather:atmosphere\")\n  humidity<-as.numeric(sapply(ans, xmlGetAttr, \"humidity\"))\n  visibility<-as.numeric(sapply(ans, xmlGetAttr, \"visibility\"))\n  pressure<-as.numeric(sapply(ans, xmlGetAttr, \"pressure\"))\n  rising<-as.numeric(sapply(ans, xmlGetAttr, \"rising\"))\n\n  ans<-getNodeSet(doc, \"//item/yweather:condition\")\n  code<-sapply(ans, xmlGetAttr, \"code\")\n\n  ans<-getNodeSet(doc, \"//item/yweather:forecast[1]\")\n  low<-as.numeric(sapply(ans, xmlGetAttr, \"low\"))\n  high<-as.numeric(sapply(ans, xmlGetAttr, \"high\"))\n\n  print(paste(x,'==>',low,high,code,humidity,visibility,pressure,rising))\n  cbind(low,high,code,humidity,visibility,pressure,rising)\n}\n\nfilename<-function(date=Sys.time()){\n  paste(format(date,\"%Y%m%d\"),\".csv\",sep=\"\")\n}\n\nloadDate<-function(date){\n  print(paste('Date','==>',date))\n  city<-read.csv(file=\"WOEID.csv\",header=FALSE,fileEncoding=\"utf-8\", encoding=\"utf-8\")\n  names(city)<-c(\"en\",\"woeid\",\"zh\",'prov','long','lat')\n  city<-city[-nrow(city),]\n\n  wdata<-do.call(rbind,lapply(city$woeid, getWeather))\n  w<-cbind(city,wdata)\n  write.csv(w,file=filename(date),row.names = FALSE,fileEncoding = \"utf-8\")\n}\n\ngetColors2<-function(map,prov,ctype){\n  ADCODE99 <- read.csv(file=\"ADCODE99.csv\",header=TRUE,fileEncoding=\"utf-8\", encoding=\"utf-8\")\n  fc <- function(x){ADCODE99$ADCODE99[which(x==ADCODE99$prov)]}\n  code <- sapply(prov, fc)\n\n  f=function(x,y) ifelse(x %in% y, which(y==x),0);\n  colIndex=sapply(map$ADCODE99, f,code);\n  ctype[which(is.na(ctype))]=19\n  return(ctype[colIndex])\n\n}\n\nsummary<-function(data=data,output=FALSE,path=''){\n  library(maps)\n  library(mapdata)\n  library(maptools)\n  library(RColorBrewer)\n  colors<-c(rev(brewer.pal(9,\"Blues\")),rev(c('#b80137','#8c0287','#d93c5d','#d98698','#f6b400','#c4c4a7','#d6d6cb','#d1b747','#ffeda0')))\n\n  temp<- data$code\n  title <- \"天氣\"\n  ofile <- paste(format(date,\"%Y%m%d\"),\"_code.png\",sep=\"\")\n  sign <- ''\n  colors<-rev(colors)\n  code <- read.csv(file=\"code.csv\",header = TRUE,fileEncoding = \"utf-8\",encoding = \"utf-8\")\n  labelcode<-read.csv(file=\"lablecode.csv\",header=TRUE,fileEncoding=\"utf-8\", encoding=\"utf-8\")\n  ctype <- sapply(temp, function(x){code$type[which(x==code$code)]})\n\n  if(output)png(file=paste(path,ofile,sep=''),width=600,height=600)\n  layout(matrix(data=c(1,2),nrow=1,ncol=2),widths = c(8,1),heights = c(1,2))\n  par(mar=c(0,0,3,12),oma=c(0.2,0.2,0.2,0.2),mex=0.3)\n  plot(map,border=\"white\",col=colors[getColors2(map,data$prov,ctype)])\n  points(data$long,data$lat,pch=19,col=rgb(0,0,0,0.3),cex=0.8)\n\n  if(FALSE){\n    grid()\n    axis(1,lwd=0);axis(2,lwd=0);axis(3,lwd=0);axis(4,lwd=0);\n\n  }\n  text(100,58,title,cex=2)\n  text(105,54,format(date,\"%Y-%m-%d\"))\n  text(98,65,paste('天氣','http://apps.weibo.com/chinaweatherapp'))\n\n  for(row in 1:nrow(data)){\n    name <- as.character(data$zh[row])\n    label <- labelcode$alias[labelcode$type==ctype[row]]\n    x1 <- ceiling(row/7)\n    x2 <- ifelse(row%%7==0,7,row%%7)\n    x3 <- ctype[row]\n    fontCol <- '#000000'\n    if(x3<=5) fontCol<-head(colors,1)\n    if(x3>=12) fontCol <- tail(colors,1)\n    text(68+x1*11,17-x2*3,paste(name,' ',label,sign,sep=''),col=fontCol)\n\n  }\n\n  par(mar=c(5,0,15,10))\n  image(x=1,y=1:length(colors),z=t(matrix(1:length(colors))),col=rev(colors),axes=FALSE,xlab=\"\",ylab=\"\",xaxt=\"n\")\n  axis(4, at = 1:(nrow(labelcode)-1), labels=rev(labelcode$alias)[-1], col = \"white\", las = 1)\n  abline(h=c(1:(nrow(labelcode)-2)+0.5), col = \"white\", lwd = 2, xpd = FALSE)\n  if(output)dev.off()\n}\nweather_html<-function(data=data,type='high',output=FALSE,path=''){\n    if(type=='high'){\n      df<-data[,c('prov','high')]\n      names(df)<-c(\"prov\",\"氣溫\")\n      title<- paste(format(date,\"%Y-%m-%d\"),\"白天天氣概況\",sep=\"\")\n      ofile<- paste(format(date,\"%Y%m%d\"),\"_day.html\",sep=\"\")\n    }else if(type=='low'){\n      df<-data[,c('prov','low')]\n      names(df)<-c(\"prov\",\"氣溫\")\n      title<- paste(format(date,\"%Y-%m-%d\"),\"夜間天氣概況\",sep=\"\")\n      ofile<- paste(format(date,\"%Y%m%d\"),\"_night.html\",sep=\"\")\n    }\n\n    df[,1]<-substr(df[,1],0,2)\n    df[which(df$prov=='黑龍'),]$prov<-'黑龍江'\n    df[which(df$prov=='內蒙'),]$prov<-'內蒙古'\n\n    recharts.eMap <- eMap(df, namevar=1, datavar = 2, title=title)\n    if(output){\n      recharts.eMap$outList[c('chartid','type')]<-NULL\n      writeLines(unlist(recharts.eMap$outList),paste(path,ofile,sep=''))\n    }else{\n      plot(recharts.eMap)\n    }\n}\n",
    "created" : 1438584025971.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2708640800",
    "id" : "4D4FEC16",
    "lastKnownWriteTime" : 1438593502,
    "path" : "~/R/Weather/R/WeatherTaiwan.R",
    "project_path" : "R/WeatherTaiwan.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}